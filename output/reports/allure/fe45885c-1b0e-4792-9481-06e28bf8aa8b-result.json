{"name": "test_methodTwo", "status": "failed", "statusDetails": {"message": "Failed: TEXTS ARE NOT EQUAL\nassert 'Easily book ... you need it.' == 'Easily book ...n you need it'\n  - Easily book daily and monthly parking when you need it\n  + Easily book daily and monthly parking when you need it.\n  ?                                                       +", "trace": "self = <test_android_native.Test object at 0x1029bee00>\n\n    @pytest.mark.AndroidNative\n    @pytest.mark.usefixtures(\"init_driver\")\n    def test_methodTwo(self):\n        log = cl.customLogger()\n        elementLocator = (AppiumBy.ID, \"com.spplus.parking.develop:id/text1\")\n        elementLocated = WebDriverWait(self.driver,15).until(EC.presence_of_element_located(elementLocator)).text\n        try:\n>           assert elementLocated == \"Easily book daily and monthly parking when you need it\", \"TEXTS ARE NOT EQUAL\"\nE           AssertionError: TEXTS ARE NOT EQUAL\nE           assert 'Easily book ... you need it.' == 'Easily book ...n you need it'\nE             - Easily book daily and monthly parking when you need it\nE             + Easily book daily and monthly parking when you need it.\nE             ?                                                       +\n\ntests/android/native/test_android_native.py:26: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_android_native.Test object at 0x1029bee00>\n\n    @pytest.mark.AndroidNative\n    @pytest.mark.usefixtures(\"init_driver\")\n    def test_methodTwo(self):\n        log = cl.customLogger()\n        elementLocator = (AppiumBy.ID, \"com.spplus.parking.develop:id/text1\")\n        elementLocated = WebDriverWait(self.driver,15).until(EC.presence_of_element_located(elementLocator)).text\n        try:\n            assert elementLocated == \"Easily book daily and monthly parking when you need it\", \"TEXTS ARE NOT EQUAL\"\n        except AssertionError as e:\n            log.error(\"Assertion error\")\n            self.driver.save_screenshot(\"/output/screenshots/error.png\")\n>           pytest.fail(str(e))\nE           Failed: TEXTS ARE NOT EQUAL\nE           assert 'Easily book ... you need it.' == 'Easily book ...n you need it'\nE             - Easily book daily and monthly parking when you need it\nE             + Easily book daily and monthly parking when you need it.\nE             ?                                                       +\n\ntests/android/native/test_android_native.py:30: Failed"}, "attachments": [{"name": "log", "source": "d4906417-6b03-47a7-b89f-d05a193c6ef3-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "cb6d301f-2ef7-470c-b5eb-e20ac9c001d5-attachment.txt", "type": "text/plain"}], "start": 1658650856543, "stop": 1658650859891, "uuid": "03bff796-d153-4636-8ebc-8d0b2e283cfa", "historyId": "8ee50f022aef2dce608fdc3af04216f5", "testCaseId": "4ea0f0d4b6e973f41fe90769a1e3e81b", "fullName": "tests.android.native.test_android_native.Test#test_methodTwo", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "tag", "value": "AndroidNative"}, {"name": "parentSuite", "value": "tests.android.native"}, {"name": "suite", "value": "test_android_native"}, {"name": "subSuite", "value": "Test"}, {"name": "host", "value": "MacBook-Pro-de-Juan.local"}, {"name": "thread", "value": "58617-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.android.native.test_android_native"}]}